name: game_deployement

services:
  consul:
    image: hashicorp/consul:1.19
    ports:
      - "8500:8500"
    command: agent -dev -client=0.0.0.0
    healthcheck:
      test: curl --fail http://localhost:8500/v1/status/leader
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: redis-server
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    ports:
      - "6969:6969"
    healthcheck:
      test: curl --fail http://localhost:6969/status
      interval: 3s
      timeout: 5s
      retries: 5
    stop_grace_period: 2s
    depends_on:
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
  
  user-db:
    image: postgres:17
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: user_data
      POSTGRES_USER: su_user
      POSTGRES_PASSWORD: secret_pass_user
    healthcheck:
      test: pg_isready -U su_user -d user_data
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - pg_user_data:/var/lib/postgresql/data

  game-db:
    image: postgres:17
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: game_data
      POSTGRES_USER: su_game
      POSTGRES_PASSWORD: secret_pass_game
    healthcheck:
      test: pg_isready -U su_game -d game_data
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - pg_game_data:/var/lib/postgresql/data

  user-service:
    build:
      context: ./User_Service
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    ports:
      - "9000"
    environment:
      DATABASE_URL: postgres://su_user:secret_pass_user@user-db:5432/user_data
      JWT_SECRET: token_secret
    healthcheck:
      test: grpc_health_probe -addr=:9000
      interval: 3s
      timeout: 5s
      retries: 5
    stop_grace_period: 2s
    depends_on:
      user-db:
        condition: service_healthy
      consul:
        condition: service_healthy

  game-service:
    build:
      context: ./Game_Service
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    ports:
      - "7000"
    environment:
      DATABASE_URL: postgres://su_game:secret_pass_game@game-db:5432/game_data
      JWT_SECRET: token_secret
    healthcheck:
      test: grpc_health_probe -addr=:7000
      interval: 3s
      timeout: 5s
      retries: 5
    stop_grace_period: 2s
    depends_on:
      game-db:
        condition: service_healthy
      consul:
        condition: service_healthy

volumes:
  pg_user_data:
  pg_game_data: